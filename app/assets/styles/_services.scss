$component: "service-block";
@import "imports/_responsive-block-base";
@include responsive-block-base($component);
$font-size: 26px ;

@mixin ellipsis($font-size, $line-height, $lines-to-show){
  display: block; // Fallback for non-webkit
  display: -webkit-box;
  max-width: 100%;
  min-height: $font-size*$line-height*$lines-to-show; //Fallback for non-webkit
  font-size: $font-size;
  line-height: $line-height;
  -webkit-line-clamp: $lines-to-show;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin hoverStripe($bg-color){
  &:before{
    content: '\00ad';
    display: block;
    width: 100%;
    height: 4px;
    background: $brand-primary;
    position: absolute;
    left: 0;
    bottom: 0;
  }
  background-color: $bg-color;
  border-bottom-color: $brand-primary;
}

/* Generates warning, success, info and
primary classes to given css parameter.
EXAMPLE:
p { @include colorStates(color));}
outcome:
p.warning{color:#FF6319;}
p.success{color:#00B48C;}
p.info{color:#0083BE;}
p.primary{color:#652d86;}
*/

@mixin colorStates($parameter){
  &.warning{
    #{$parameter}: $brand-warning;
  }
  &.success{
    #{$parameter}: $brand-success;
  }
  &.info{
    #{$parameter}: $brand-info;
  }
  &.primary{
    #{$parameter}: $brand-primary;
  }
}

@mixin seviceBadge($border-color,$background-color,$border-width,$height){
  .badge{
    background: none;
    border:none;
    position: absolute;
    display: block;
    left:50%;
    top:0;
    margin:0;
    padding: 0;
    margin-top: -24px;
    margin-left:9px;
    width: auto;
    min-width: 20px;
    .icon,
    var{
      background: $border-color;
      border: $border-width solid $border-color;
      @include border-radius($height);
      font-size: $height;
      line-height: $height;
      min-width: 0;
      width:  $height;
      height :$height;
      display: block;
      box-sizing: content-box;
    }
    var{
      background: $background-color;
      color:$background-color ;
      font-size: $height/2;
      @include colorStates(background-color);
    }
  }
}



//Mobile
$bg-color: lighten(#000, 96.5%); //#F6F6F6
$bg-color-hover: $brand-white;
.#{$component}{
  background-color: $bg-color;
  border: 1px solid $input-border;
  padding:2em .33333em 1.33333em 1em;
  &:hover{
    @include hoverStripe($bg-color-hover);
    @include seviceBadge(
    $border-color: $bg-color-hover,
    $background-color: $bg-color-hover,
    $border-width: 8px,
    $height: 40px)
  }

  figure{
    position: relative;
    .icon{
      font-size:64px;
      color: $brand-primary;
      min-width: 100%;
    }

    @include seviceBadge(
      $border-color: $bg-color,
      $background-color: $bg-color,
      $border-width: 8px,
      $height: 40px);

  }
  .content{
    >h3{
      color: $brand-primary;
      margin-top: 0;
      font-size: $font-size;
    }
    p{
      margin-top:10px;
    }
  }
  //TODO: status
  .status{
    font-weight: bold;
    @include colorStates(color);
    &.bottom {
      margin-top: 20px;
      display: inline-block;
    }
    &.top{
      position: absolute;
      top: 0;
      width: 100%;
      left: 0;
      margin-top: 10px;
      text-align: center;
    }
  }
}
/*  block klick*/
a.#{$component}{
  &:hover{
    text-decoration: none;
    cursor: pointer;
  }
}

//sm.min and up
@media (min-width: $screen-sm-min) {
  .#{$component} {
    padding: 30px 10px 20px 10px;
    figure{
      margin-top: 30px;
      padding-bottom:30px;
      position: relative;
    }

    .content{
      >h3 {
        $line-height: 1.2;
       @include ellipsis($font-size, $line-height , 2);
       margin-top:20px;
        min-height: $line-height;
      }
      p{
        @include ellipsis($font-size-base, $line-height-base, 2);
      }
    }
  }
}