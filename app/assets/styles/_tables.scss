//
// Tables
// --------------------------------------------------


table {
  max-width: 100%;
  background-color: $table-bg;
}
th {
  text-align: left;
}


// Baseline styles

.table {
  width: 100%;
  margin-bottom: $line-height-computed;
  // Cells
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        padding: $table-cell-padding;
        line-height: $line-height-base;
        vertical-align: top;
        border-top: 1px solid $table-border-color;
        &:first-child{
          padding-left:0;
        }
        &:last-child{
          padding-right:0;
        }
      }
      &:last-child{
        td{
          border-bottom: 1px solid $table-border-color;
        }
      }
    }
  }
  > tfoot > tr:last-child > td { 
    border-bottom: none; 
  }
  
  // Bottom align for column headings
  > thead > tr > th {
    vertical-align: bottom;
    border-bottom: 2px solid $table-border-color;
  }
  // Remove top border from thead by default
  > caption + thead,
  > colgroup + thead,
  > thead:first-child {
    > tr:first-child {
      > th,
      > td {
        border-top: 0;
      }
    }
  }
  // Account for multiple tbody instances
  > tbody + tbody {
    border-top: 2px solid $table-border-color;
  }

  // Nesting
  .table {
    background-color: $body-bg;
  }
}


// Condensed table w/ half padding

.table-condensed {
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        padding: $table-condensed-cell-padding;
      }
    }
  }
}


// Bordered version
//
// Add borders all around the table and between all the columns.

.table-bordered {
  border: 1px solid $table-border-color;
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        border: 1px solid $table-border-color;
        &:first-child{
          padding: $table-cell-padding;
        }
        &:last-child{
          padding: $table-cell-padding;
        }
      }
    }
  }
  > thead > tr {
    > th,
    > td {
      border-bottom-width: 2px;
    }
  }
}


// Zebra-striping
//
// Default zebra-stripe styles (alternating gray and transparent backgrounds)

.table-striped {
  > tbody > tr:nth-child(odd) {
    > td,
    > th {
      background-color: $table-bg-accent;
    }
  }

  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        &:first-child{
          padding: $table-cell-padding;
        }
        &:last-child{
          padding: $table-cell-padding ;
        }
      }
    }
  }
}


// Hover effect
//
// Placed here since it has to come after the potential zebra striping

.table-hover {
  > tbody > tr:hover {
    @include expand-row-background ($table-bg-hover);
    > td,
    > th {
      background-color: $table-bg-hover;
    }
  }
}


// Table cell sizing
//
// Reset default table behavior

table col[class*="col-"] {
  float: none;
  display: table-column;
}
table {
  td,
  th {
    &[class*="col-"] {
      float: none;
      display: table-cell;
    }
  }
}


// Table backgrounds
//
// Exact selectors below required to override `.table-striped` and prevent
// inheritance to nested tables.

.table {
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > td.active,
      > th.active,
      &.active > td,
      &.active > th  {
        background-color: $table-bg-active;
      }
    }
  }
}

// Generate the contextual variants

@include table-row-variant('success', $table-bg-success, $state-success-border);
@include table-row-variant('danger', $table-bg-danger, $state-danger-border);
@include table-row-variant('warning', $table-bg-warning, $state-warning-border);
@include table-row-variant('info', $table-bg-info, $state-info-border);
@include table-row-variant('active', $table-bg-active, "null");

// Responsive tables
//
// Wrap your tables in `.table-responsive` and we'll make them mobile friendly
// by enabling horizontal scrolling. Only applies <768px. Everything above that
// will display normally.

@media (max-width: $screen-xs-max) {
  .table-responsive {
    width: 100%;
    margin-bottom: ($line-height-computed * 0.75);
    overflow-y: hidden;
    overflow-x: scroll;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    border: 1px solid $table-border-color;
    -webkit-overflow-scrolling: touch;

    // Tighten up spacing
    > .table {
      margin-bottom: 0;

      // Ensure the content doesn't wrap
      > thead,
      > tbody,
      > tfoot {
        > tr {
          > th,
          > td {
            white-space: nowrap;
          }
        }
      }
    }

    // Special overrides for the bordered tables
    > .table-bordered {
      border: 0;

      // Nuke the appropriate borders so that the parent can handle them
      > thead,
      > tbody,
      > tfoot {
        > tr {
          > th:first-child,
          > td:first-child {
            border-left: 0;
          }
          > th:last-child,
          > td:last-child {
            border-right: 0;
          }
        }
      }

      // Only nuke the last row's bottom-border in `tbody` and `tfoot` since
      // chances are there will be only one `tr` in a `thead` and that would
      // remove the border altogether.
      > tbody,
      > tfoot {
        > tr:last-child {
          > th,
          > td {
            border-bottom: 0;
          }
        }
      }

    }
  }
}
.numeric { text-align:right; }
/* flip scroll */
@media only screen and (max-width: 800px) {
  #flip-scroll {
    .cf:after { 
      visibility: hidden; 
      display: block; 
      font-size: 0; 
      content: " "; 
      clear: both; 
      height: 0; 
    }
    * html .cf { zoom: 1; }
    *:first-child+html .cf { zoom: 1; }

    table { 
      width: 100%; 
      border-collapse: collapse; 
      border-spacing: 0;
      display: block; 
      position: relative; 
      width: 100%;

      th,
      td { 
        margin: 0; 
        vertical-align: top;
        display: block; 
        min-height: 1.25em; 
        text-align: left; 
        border-left: 0; 
        border-right: 0; 
        border-bottom: 0;
        //white-space: normal;

        &:last-child { 
          border-bottom: 1px solid #babcbf; 
        }

        &.numeric {
          text-align: right;
        }
      }

      th { 
        text-align: left;
        display: block; 
        text-align: right;
        border-bottom: 0; 
        border-left: 0;
        border-right: 1px solid #babcbf;

        &.numeric {
          text-align: right;
        }

      }

      thead { 
        display: block; 
        float: left; 

        tr { 
          display: block; 
        }
      }
      tbody {
        display: block; 
        width: auto; 
        position: relative; 
        overflow-x: auto; 
        white-space: nowrap;

        tr { 
          display: inline-block; 
          vertical-align: top; 
          border-left: 1px solid #babcbf;  
        }
      }
    } 
  }
}