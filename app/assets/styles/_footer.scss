footer {

  /* sticky footer */
  bottom:0;
  //position: absolute;

  .container-no-gutter {
    padding-left: 0;
  }
  background-color: darken($brand-primary,7.6%);
  color: #fff;
  min-width: 320px;
  width: 100%;

  /// new
  h2 {
    border-bottom: 1px solid darken($brand-primary,15%);
    font-size: $font-size-base + 3;
    font-weight: normal;
    margin: 38px 30px 10px 0;
    padding-bottom: 6px;
    padding-top: 6px;
    padding-left: 15px;
    > a, > a:hover, > a:focus, a:active {
      color: $link-color-on-dark-bg;
      text-decoration: none;
      cursor: text;
      @media (max-width: $screen-xs-max) {
        cursor: pointer;
      }
    }

    /*&:hover, &:active, &:focus  {
        background-color: lighten($brand-primary, 7.6%);
    }*/

    @media (max-width: $screen-xs-max) {

      margin:0;
      padding: 8px 10px;
      background-color: $brand-primary;
      
      &.active {
        cursor: pointer;
        a:after {
          @include setIconFonts();
          position: relative;
          top: 6px;
          float: right;
          content: "\e66b";
        }
      }

      &:hover, &:active, &:focus  {
        background-color: lighten($brand-primary, 7.6%);
      }
      > a {
        display: block;
      }
      > a:after {
        @include setIconFonts();
        position: relative;
        top: 6px;
        float: right;
        content: "\e669";
      }
    }
  }
  .list-group {

    .list-group-item {

      background: none;
      border: 0;
      display: block;
      margin: 0;
      margin-right: 20px;
      padding-right: 0;
      padding-bottom: 6px;
      padding-top: 6px;
      border-radius: 0;
      position: relative;
      padding-left: 15px;

      > a, > a:hover {

        color: $link-color-on-dark-bg;
        text-decoration: none;
      }
      &:hover, &:active, &:focus  {
          background-color: lighten($brand-primary, 7.6%);
          cursor: pointer;
      }

      @media (max-width: $screen-xs-max) {
        
        border-bottom: 1px solid darken($brand-primary,15%);
        padding-left: 10px;
        padding-right: 10px;
        padding-top: 8px;
        margin:0;

        > a:after {
          @include setIconFonts();
          position: relative;
          top: 6px;
          float: right;
          content: "\e668";
        }
      }

    }

    @media (max-width: $screen-xs-max) {

      margin:0;

      .list-group-item { 
        display:none;
        cursor: pointer;
      }

      &.active {
        .list-group-item { 

          display:block;

          &:hover, &:active, &:focus  {
            background-color: lighten($brand-primary, 7.6%);
          }
        }
      }
    }
  }
  /// end new



   

  // media object
  .social-block {
    padding:0;
    background-color: $brand-primary;
    .media {

      padding-top: 20px;
      padding-bottom: 20px;
      margin-right: 15px;
      padding-left: 15px;

      &:hover {
        
        background-color: darken($brand-primary, 7.6%);
        cursor: pointer;

        &:before {
          background-color: darken($brand-primary, 7.6%);
          content: "";
          display: block;
          position: absolute;
          height: 100%;
          width: 20px;
          top: 0;
          left: -15px;
        }
      }

      [class*="facebook"]{
        @include setFooterIcons($facebook-blue);
      }
      [class*="youtube"]{
        @include setFooterIcons($youtube-red);
      }
      [class*="twitter"]{
        background-color: $twitter-blue;
        @include setFooterIcons($twitter-blue);
      }
      [class*="google-plus"]{
        background-color: $google-plus-red;
        @include setFooterIcons($google-plus-red);
      }
      
      [class*="icon-private_services"] {
        @include setFooterIcons(transparent,24px);
      }
      [class*="icon-business_services"] {
        @include setFooterIcons(transparent,24px);
      }
      [class*="icon-buy_2"] {
        @include setFooterIcons(transparent,24px);
      }
      [class*="icon-facebook"] {
        @include setFooterIcons(transparent,24px);
      }
    }

    @media (max-width: $screen-xs-max) {
      padding-top:10px;

      .media{
        padding:10px 0 10px 8px;
        margin: 0px;
      }
      
    }

  }

  .copyright{
    background-color: $body-bg;
    color: #333333;
    padding: 15px;
  }

  /* test */
  

}

.container-no-gutter {
  @include container-fixed();
  
  padding-left:0; 
  padding-right:0;
  overflow: hidden;
  // mobile first defaults
  .row {
    @include make-row-reset-gutter();
  }

  @include make-grid-columns();

  @media (max-width: $screen-xs-min) {
    @include make-grid-columns-float(xs);
    @include make-grid($grid-columns, xs, width);
    //@include make-grid($grid-columns, xs, pull);
    //@include make-grid($grid-columns, xs, push);
    //@include make-grid($grid-columns, xs, offset);
    @include reset-gutter($grid-columns, xs);
  }
  

  @media (min-width: $screen-sm-min) {

    padding-left:  ($grid-gutter-width / 2);
    padding-right: ($grid-gutter-width / 2);
    width: $full-width; //$container-sm;
    @include make-grid-columns-float(sm);
    @include make-grid($grid-columns, sm, width);
    @include make-grid($grid-columns, sm, pull);
    @include make-grid($grid-columns, sm, push);
    @include make-grid($grid-columns, sm, offset);
    @include reset-gutter($grid-columns, sm);
  }

  @media (min-width: $screen-md-min) {

    padding-left:  ($grid-gutter-width / 2);
    padding-right: ($grid-gutter-width / 2);
    width: $container-md;

    @include make-grid-columns-float(md);
    @include make-grid($grid-columns, md, width);
    @include make-grid($grid-columns, md, pull);
    @include make-grid($grid-columns, md, push);
    @include make-grid($grid-columns, md, offset);
    @include reset-gutter($grid-columns, md);
  }

  @media (min-width: $screen-lg-min) {
    
    padding-left:  ($grid-gutter-width / 2);
    padding-right: ($grid-gutter-width / 2);
    width: $container-lg;

    @include make-grid-columns-float(lg);
    @include make-grid($grid-columns, lg, width);
    @include make-grid($grid-columns, lg, pull);
    @include make-grid($grid-columns, lg, push);
    @include make-grid($grid-columns, lg, offset);
    @include reset-gutter($grid-columns, lg);
  }

  @media (min-width: $screen-extra-lg) {
    
    padding-left:  ($grid-gutter-width / 2);
    padding-right: ($grid-gutter-width / 2);
    width: $container-extra-large-desktop;

    @include make-grid-columns-float(lg);
    @include make-grid($grid-columns, lg, width);
    @include make-grid($grid-columns, lg, pull);
    @include make-grid($grid-columns, lg, push);
    @include make-grid($grid-columns, lg, offset);
    @include reset-gutter(12, lg);
  }

}